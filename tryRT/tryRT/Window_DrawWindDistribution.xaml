<Window x:Class="GUI.Window_DrawWindDistribution"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:GUI"
        Title="Window_DrawWindDistribution" Height="550" Width="600" x:Name="view"
        MinHeight="500" MinWidth="500">
    <DockPanel>
        <StackPanel Width="110" HorizontalAlignment="Left" DockPanel.Dock="Left" Margin="5,5,5,5">
            <Label Content="排数" HorizontalAlignment="Left" Width="50" Margin="5,5,0,0"/>
            <TextBox x:Name="NRow" Text="2" HorizontalAlignment="Left" Width="50" Margin="5,0,5,5"></TextBox>
            <Label Content="管数" HorizontalAlignment="Left" Width="50" Margin="5,10,0,0"/>
            <TextBox x:Name="NTube" Text="4" HorizontalAlignment="Left" Width="50" Margin="5,0,5,5"></TextBox>
            <Button x:Name="Button1" Content="OK" HorizontalAlignment="Stretch" Margin="5,5,5,5" Click="Button_Click_Sure"></Button>
            <ToggleButton x:Name="ToggleButton1" Content="流路连接" HorizontalAlignment="Stretch"  Margin="5,5,5,5" IsChecked="{Binding CreatNewConnector}"></ToggleButton>
            <Button Content="重连" HorizontalAlignment="Stretch" Margin="5,5,5,5" Click="Button_Click_Reconnect"/>
            <Button Content="放大" HorizontalAlignment="Stretch" Margin="5,20,5,5" Click="Button_Click_zoomout"/>
            <Button Content="缩小" HorizontalAlignment="Stretch" Margin="5,0,5,5" Click="Button_Click_zoomin"/>
            <Button Content="删除" HorizontalAlignment="Stretch" Margin="5,0,5,5" Click="Button_Click_delete"/>
            <Label Content="毛细管长度/m" HorizontalAlignment="Left" Width="Auto" Margin="5,10,0,0"/>
            <TextBox  x:Name="TextBox_Length" HorizontalAlignment="Stretch" Width="Auto" Margin="5,0,5,5" IsEnabled="False"/>
            <Label Content="毛细管直径/mm" HorizontalAlignment="Left" Width="Auto" Margin="5,0,0,0"/>
            <TextBox  x:Name="TextBox_Diameter" HorizontalAlignment="Stretch" Width="Auto" Margin="5,0,5,5" IsEnabled="False"/>
            <Button x:Name="Button_Capacity" Content="确定" HorizontalAlignment="Stretch" Margin="5,0,5,5" Click="Button_Click_Capacity" IsEnabled="False"/>
        </StackPanel>
        <Grid Margin="10">
            <Grid.Resources>
                <CompositeCollection x:Key="Col">
                    <CollectionContainer Collection="{Binding DataContext.Connectors, Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Capacities, Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Rects, Source={x:Reference view}}"/>
                    <CollectionContainer Collection="{Binding DataContext.Nodes, Source={x:Reference view}}"/>
                </CompositeCollection>
                <DataTemplate DataType="{x:Type local:Node}">
                    <Canvas Margin="-10,-10,10,10">
                        <Ellipse x:Name="Ellipse" Width="20" Height="20" Stroke="Black" StrokeThickness="1" Fill="Yellow">
                        </Ellipse>
                    </Canvas>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="White"/>
                            <Setter TargetName="Ellipse" Property="Stroke" Value="Red"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:Connector}">
                    <Line x:Name="Line" Stroke="Blue" StrokeThickness="3"
                          X1="{Binding Start.X}" Y1="{Binding Start.Y}" X2="{Binding End.X}" Y2="{Binding End.Y}"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter TargetName="Line" Property="Stroke" Value="Red"/>
                            <Setter TargetName="Line" Property="StrokeDashArray" Value="2 3"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:Capacity}">
                    <Line x:Name="Line2" Stroke="Red" StrokeThickness="3"
                          X1="{Binding Start.X}" Y1="{Binding Start.Y}" X2="{Binding End.X}" Y2="{Binding Start.Y}"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter TargetName="Line2" Property="Stroke" Value="Red"/>
                            <Setter TargetName="Line2" Property="StrokeDashArray" Value="2 3"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:Rect}">
                    <Canvas Margin="-10,-10,10,10">
                        <Rectangle x:Name="Rectangle" Width="10" Height="{Binding RectHeight}" Fill="Blue" Stroke="Black" StrokeThickness="1"/>
                    </Canvas>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                            <Setter TargetName="Rectangle" Property="Stroke" Value="Red"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>

            </Grid.Resources>
            <ListBox x:Name="ListBox_this" SelectionChanged="ListBox_SelectionChanged" MouseRightButtonDown="ListBox_MouseRightButtonDown" 
                    MouseDoubleClick="ListBox_MouseDoubleClick">
                <ListBox.Template>
                    <ControlTemplate>
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity="0.5">
                                    <GradientStop Color="Wheat" Offset="0"/>
                                    <GradientStop Color="GhostWhite" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <Border>
                                    <Border.Background>
                                        <VisualBrush TileMode="Tile"
                                                     Viewport="0,0,50,50" ViewportUnits="Absolute"
                                                     Viewbox="0,0,50,50" ViewboxUnits="Absolute">
                                            <VisualBrush.Visual>
                                                <Rectangle Stroke="DarkGray" StrokeThickness="1" Height="50" Width="50" StrokeDashArray="5 3"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Border.Background>
                                    <ItemsPresenter/>
                                </Border>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsSource>
                    <StaticResource ResourceKey="Col"/>
                </ListBox.ItemsSource>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True" Background="#01FFFFFF" VerticalAlignment="Top" HorizontalAlignment="Left" Height="{Binding PanelHeight}" Width="{Binding PanelWidth}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter x:Name="Content"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </DockPanel>
</Window>
